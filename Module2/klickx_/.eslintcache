[{"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/index.js":"1","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reportWebVitals.js":"2","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/App/App.js":"3","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/RegisterPage/RegisterPage.jsx":"4","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/HomePage/HomePage.js":"5","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/index.js":"6","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/kiickx_reducers.js":"7","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/pictureData.js":"8","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/users.js":"9","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/LoginLogoutAction.js":"10","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/helpers/history.js":"11","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/LoginPage/LoginPage.js":"12","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/Routes.js":"13","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Header/Header.js":"14","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/SideNavBar/SideNavBar.js":"15","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/ProfilePage/ProfilePage.js":"16","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Footer/Footer.js":"17","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/UserHomePage/UserHomePage.js":"18","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/registrationReducers.js":"19","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/RegisterUserAction.js":"20","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/ImagesComponent/Images.js":"21","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/imageActionsReducers.js":"22","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/ImageActions.js":"23","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/FavoritesPage/FavoritesPage.js":"24"},{"size":883,"mtime":1612058524664,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611620991931,"results":"27","hashOfConfig":"26"},{"size":598,"mtime":1612104032768,"results":"28","hashOfConfig":"26"},{"size":2980,"mtime":1612293631165,"results":"29","hashOfConfig":"26"},{"size":1321,"mtime":1612293855801,"results":"30","hashOfConfig":"26"},{"size":517,"mtime":1612286873468,"results":"31","hashOfConfig":"26"},{"size":1912,"mtime":1612391159925,"results":"32","hashOfConfig":"26"},{"size":3861,"mtime":1612275753294,"results":"33","hashOfConfig":"26"},{"size":2707,"mtime":1611941084972,"results":"34","hashOfConfig":"26"},{"size":329,"mtime":1612284454458,"results":"35","hashOfConfig":"26"},{"size":85,"mtime":1612035930978,"results":"36","hashOfConfig":"26"},{"size":4972,"mtime":1612391049866,"results":"37","hashOfConfig":"26"},{"size":1358,"mtime":1612391274147,"results":"38","hashOfConfig":"26"},{"size":418,"mtime":1612290086856,"results":"39","hashOfConfig":"26"},{"size":1151,"mtime":1612404414139,"results":"40","hashOfConfig":"26"},{"size":1807,"mtime":1612403535668,"results":"41","hashOfConfig":"26"},{"size":426,"mtime":1612290074043,"results":"42","hashOfConfig":"26"},{"size":1880,"mtime":1612403215042,"results":"43","hashOfConfig":"26"},{"size":1136,"mtime":1612262051191,"results":"44","hashOfConfig":"26"},{"size":128,"mtime":1612198669840,"results":"45","hashOfConfig":"26"},{"size":4216,"mtime":1612407856699,"results":"46","hashOfConfig":"26"},{"size":2810,"mtime":1612405169852,"results":"47","hashOfConfig":"26"},{"size":1012,"mtime":1612400072581,"results":"48","hashOfConfig":"26"},{"size":1689,"mtime":1612362699316,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1snfh7b",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/index.js",[],["106","107"],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reportWebVitals.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/App/App.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/RegisterPage/RegisterPage.jsx",["108","109"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { register }  from '../../actions/RegisterUserAction';\nimport history from '../../helpers/history';\nimport './RegisterPage.css';\nimport users from '../../reducers/users';\n\nclass RegisterPage extends Component {\n\n    state = {\n        users: users,   \n        name: '',\n        email: '',\n        password: '',\n        isRegistered: false\n    }\n    handleChange = (e) =>{\n        //to bind the text which we entered and to store in that corresponding ids  \n        this.setState({ [e.target.id]: e.target.value })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.setState({ submitted: true });\n        console.log(this.state);\n        //const { newUser } = this.state; //this is as same as grabbing from name store into name id and etc\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n        }    \n      \n        if (newUser.name && newUser.email && newUser.password) {\n            alert('Registration - SuccesFul - Please Login!');\n            this.props.register(newUser); //line 56 - you created  props method called register\n        }   \n        console.log('inside form submission of register user - redirecting to login page');\n        localStorage.setItem('user', newUser);\n        console.log(localStorage.getItem('user'));\n        this.props.history.push('/login');\n        console.log(this.props);\n\n    }\n    render(){\n        return (\n         <div>\n            \n            <h3>Register - Create a User Account  </h3>\n            <form className='registerForm' onSubmit={this.handleSubmit}>\n                <input type='text' placeholder='Name' id='name' onChange={this.handleChange} />    \n                <input type='text' placeholder='Email' id='email' onChange={this.handleChange}/>\n                <input type='password' placeholder='Password' id='password' onChange={this.handleChange}/>\n                {/* <input type='password' placeholder='confirmPassword' id='confirmPassword' /> */}\n                <button type='submit' id='registerButton' value='register'>Register</button>\n            </form>\n            {/* <Link to='/login'> LoginPage </Link> */}\n       </div>\n    )\n}\n}\n// create a copy of the props make them accessible for this component\nconst mapStateToProps = (state) => ({\n    // trigger the action - > call the reducer -> reducer will change the state\n    user: state.users.users\n  })\n\n  // Adds a prop called \"changeLoginStatus\" which is a function that takes in a payload\n  // then dispatches payload to the action creator: \"register\"\n  const mapDispatchToProps = (dispatch) => ({\n    register : newUser => dispatch(register(newUser))\n  })\n  \n // export default connect(mapStateToProps, mapDispatchToProps)(TodoList);\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n\n\n","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/HomePage/HomePage.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/index.js",["110","111"],"// my combined reducers are going to here\n// import other reducers and your { combineReducers } from 'redux'\n\nimport { combineReducers } from 'redux';\nimport imageActionsReducers from './imageActionsReducers';\nimport klickx_reducers from './kiickx_reducers';\nimport registrationReducers from './registrationReducers';\n\n\nconst rootReducer = combineReducers({\n    users: klickx_reducers,\n    pictures: klickx_reducers,\n    users: registrationReducers,\n    pictures: imageActionsReducers\n})\n\n\nexport default rootReducer;","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/kiickx_reducers.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/pictureData.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/users.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/LoginLogoutAction.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/helpers/history.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/LoginPage/LoginPage.js",["112","113"],"import React, { Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport users from '../../reducers/users';\nimport pictures from '../../reducers/pictureData';\nimport { login } from '../../actions/LoginLogoutAction';\nimport history from '../../helpers/history';\nimport './LoginPage.css';\n\n\n  class LoginPage extends Component {\n    //Can we have our state here? As we are going to have our redux store?\n    state = {\n        users: users,\n        pictures: pictures,\n        currentUser: '',\n        name: '',\n        email: '',\n        password:'',\n        isLoggedIn: false\n      }\n  \n  handleChange = (e) =>{\n      //to bind the text which we entered and to store in that corresponding ids  \n      this.setState({ [e.target.id]: e.target.value })\n  }\n  handleSubmit=(e) => {\n      e.preventDefault();\n      //write the code to verify the user credentials and once done it needs to redirect to home page.\n      // How to redirect to home page? \n      //set the state isLoggedIn to true\n     \n      console.log('inside handle submit');\n      console.log(this.props.users.newUser);\n      const curUser = this.props.users.newUser;\n      console.log(curUser);\n      console.log(curUser.email);\n      const { thisUser } = this.state; //this is as same as grabbing from name store into name id and etc\n    //   const currentUser = {\n    //     email: this.state.email,\n    //     password: this.state.password\n    // }   \n      let userEmail = document.getElementById('email').value;\n      let userPassword = document.getElementById('password').value;\n      //code to verify the login credentials\n      if(curUser.email === userEmail && curUser.password === userPassword){\n        console.log('Login successful');\n        alert(\"Login Successful\");\n        // this.setState({currentUser : curUser});\n        // this.setState({isLoggedIn : true});\n        //to change the state globally\n        this.props.changeLoginStatus(curUser.name);\n        this.props.history.push('/userHome');\n      }\n      else {\n        alert('Invalid Credentials');\n     }\n      // outer: \n      // for(let i=0; i<this.props.users.length; i++){\n      //     if((this.props.users[i].email) === thisUser.email  && (this.props.users[i].password) === thisUser.password ){\n              \n      //             console.log(this.props.users[i].name);\n      //             console.log('loginSuccessful');\n      //             //dispatching the changeStatus to trigger the login action to trigger the reducer to change\n      //             //the status of the login \n      //             this.props.changeLoginStatus(this.props.users[i]);\n      //             this.setState({currentUser : this.props.users[i]});\n      //             this.setState({\n      //                           name: this.props.users[i].name,\n      //                           email: this.props.users[i].email,\n      //                           isLoggedIn: true\n      //             })\n      //             const {name, isLoggedIn} = this.state;\n      //             localStorage.setItem('name', name);\n      //             localStorage.setItem('isLoggedIn', isLoggedIn ? this.state.currentUser : '');\n      //             console.log(localStorage.getItem('user'));\n      //             history.push('/userHome');\n      //             //this.setState({currentUser.isLoggedIn : true});\n      //             break outer;\n      //     } \n      \n      \n  }\n\n    render() {\n      console.log('inside login page');\n      //console.log(this.state.currentUser); state is for global data - not for this class specific one\n      console.log(this.props.users); //actually, props for the current class's variables and methods\n      console.log(this.state);\n      return ( \n        \n        <div className='loginForm'>\n        <form onSubmit={this.handleSubmit}>\n                 <input type='text' placeholder='Login_Id or Email' id='email' onChange={this.handleChange}/>\n                  <input type='password' placeholder='Password' id='password' onChange={this.handleChange}/>\n                  <button type='submit' id='loginButton' value='Login'>Login</button>             \n        </form>\n        <Link className='btn btn-default' to='/register'> Create New Account </Link>\n        </div>\n  \n      )\n    }\n  }\n  // create a copy of the props make them accessible for this component\n  const mapStateToProps = (state) => ({\n    // trigger the action - > call the reducer -> reducer will change the state\n    users: state.users.users,\n    currentUser: state.users.currentUser\n  })\n\n  // Adds a prop called \"changeLoginStatus\" which is a function that takes in a payload\n  // then dispatches payload to the action creator: \"login\"\n  const mapDispatchToProps = (dispatch) => ({\n    changeLoginStatus : data => dispatch(login(data))\n  })\n  \n  \n // export default connect(mapStateToProps, mapDispatchToProps)(TodoList);\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/Routes.js",["114"],"\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\nimport FavoritesPage from './pages/FavoritesPage/FavoritesPage';\n//import SettingsPage from './pages/SettingsPage';\nimport UserHomePage from './pages/UserHomePage/UserHomePage';\n\nexport default class Routes extends Component {\n    render() {\n        return (\n            \n              <Switch>\n                        <Route exact path='/home' exact component={HomePage} />\n                \n                        <Route path='/login' component={LoginPage} />\n\n                        <Route path='/register' component={RegisterPage} />\n\n                        <Route path='/userHome' component={UserHomePage} />\n\n                        <Route path='/profile' component={ProfilePage} />\n\n                        <Route path='/favorites' component={FavoritesPage} />\n\n                        {/* <Route path='/settings' component={SettingsPage} /> */}\n                     \n                        {/*<Route path='/home' component={HomePage} />*/}\n                        \n               </Switch>           \n          \n        )\n    }\n}","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Header/Header.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/SideNavBar/SideNavBar.js",["115"],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/ProfilePage/ProfilePage.js",["116","117"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport users from '../../reducers/users';\nimport pictures from '../../reducers/pictureData';\nimport './ProfilePage.css'\n\nclass ProfilePage extends Component {\n\n    state = {\n        users: users,\n        pictures: pictures,\n        userFavorites: [],\n        currentUser: ''\n    }\n    \n    render(){\n        console.log('profile picture');\n        console.log(this.props.currentUser);\n    return (\n       \n            <div className='ProfilePage'>\n                <div className='profile'>\n                    <p> Display the profile details here</p>\n                    <h4>{this.props.users}</h4>\n                </div>\n                <div className='image1'>\n                    <img src=''></img>\n                    <div className='image1Data'>\n                        <h4>Display the likes and comments here</h4>\n                    </div>\n                </div>\n                <div className='image2'>\n                    <img src=''></img>\n                    <div className='image2Data'>\n                        <h4>Display the likes and comments here</h4>\n                    </div>\n                </div>\n                \n            </div>\n        \n    )\n}\n}\nconst mapStateToProps = (state) => ({\n    // trigger the action - > call the reducer -> reducer will change the state\n    user: state.users.users,\n    picture: state.pictures.pictures,\n    currentUser: state.users.newUser\n  })\n\n  // Adds a prop called \"changeLoginStatus\" which is a function that takes in a payload\n  // then dispatches payload to the action creator: \"register\"\n//   const mapDispatchToProps = (dispatch) => ({\n//     updateProfileInfo : profile => dispatch(Edit(profile))\n\n\n//   })\nexport default connect(mapStateToProps)(ProfilePage);","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Footer/Footer.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/UserHomePage/UserHomePage.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/registrationReducers.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/RegisterUserAction.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/ImagesComponent/Images.js",["118"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addComment, likeImage, addToFavorites, deleteComment, togglePopUp } from '../../actions/ImageActions';\nimport './Images.css';\n\nimport pictures from '../../reducers/pictureData';\nimport users from '../../reducers/users';\n\n\n\nclass Images extends Component { //why props? learn this\n    \n    state = {\n        pictures: pictures,\n        // pictureName : [Vrindavan, Srirangam, GantakiRiver, Moon, Fall, Fire, matches, sunset, nature1, Journey, cosmos, earth],\n        userLiked: false,\n        Comments: [],\n        userFavorite: [],\n        isClicked: false,\n        isOpen: '',\n        selectedImage: {\n            liked: false\n        }\n    }\n    handleClick = (e) => {\n        console.log('onclick- function');\n        console.log(e.target.id);\n        if(e.target.id === 'fav'){\n            //call actions of fav \n            this.props.addToFavorites(this.props.selectedImage)\n            alert('Added to your favorites!!!')\n        }\n        if(e.target.id === 'like'){\n            console.log(users.length);\n            let totalNumberOfUsers = users.length + 1 // existing users plus the new registered user\n            console.log(this.props.likes);\n            let newNumberOfLikes = Number(this.props.likes)+1;\n            if(this.props.selectedImage.likes < totalNumberOfUsers) {\n                this.props.likeImage(this.props.selectedImage);\n            }\n            else {\n                alert('Already Liked the image!!');\n            }\n        }\n    }\n    handleChange = (e) =>{\n        //to bind the text which we entered and to store in that corresponding ids  \n        this.setState({ [e.target.id]: e.target.value })\n    }\n    handleClose = (e) =>{\n        console.log('clicking the close button');\n        this.props.togglePopUp(false);\n    }\n  \n    render(){\n        console.log('Rendering Images');\n        console.log(this.props.selectedImage);\n        // console.log(this.props.selectedImage.liked);\n        console.log(this.props.selectedImage.comments[0].comment);\n        console.log(this.props.selectedImage.comments[0].name);\n        return (\n            // <div className='container'>\n            <div className='popup-box'>\n                <div className='box'>\n                <div className='imageContainer'>\n                <span className=\"close-icon\" onClick={this.handleClose}>x</span>\n                <img id={this.props.selectedImage.id} src={this.props.selectedImage.source} alt={this.props.selectedImage.name} />\n                </div>\n                <div className='btnContainer' >\n                    <button id='fav' onClick={this.handleClick}>Add To Favorites </button>\n                    <label id='totalLikes'>Total Likes </label>\n                    <label> {this.props.selectedImage.likes} </label>\n                    <button id='like' onClick={this.handleClick}>{this.props.selectedImage.liked ? 'Unlike' : 'Like'}</button > \n                    { this.props.selectedImage.liked  ? <img id='likedIcon' src='/likedIcon.png' alt='likedImage'/> : ''}                   \n                </div>\n                <div className='commentsContainer' >\n                    <ul>\n                        {this.props.selectedImage.comments.map(comment => {\n                            return(\n                               <li> {comment.comment}</li> \n                        )} \n                        )}\n                    </ul>\n                </div>\n                </div>\n           </div>\n    \n        )\n}\n}\nconst mapStateToProps = (state) => ({\n\n    pictures: state.pictures.pictures,\n    selectedImage : state.pictures.selectedImage,\n    isOpen : state.pictures.isOpen,\n    //userLiked: state.pictures.selectedImage.liked,\n    likes : state.pictures.selectedImage.likes\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n    likeImage : data => dispatch(likeImage(data)),\n    addComment : data => dispatch(addComment(data)),\n    deleteComment : data => dispatch(deleteComment(data)),\n    addToFavorites : data => dispatch(addToFavorites(data)),\n    togglePopUp : data => dispatch(togglePopUp(data))\n    \n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Images);","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/imageActionsReducers.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/ImageActions.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/FavoritesPage/FavoritesPage.js",["119"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeFavorite } from '../../actions/ImageActions';\nimport pictures from '../../reducers/pictureData';\nimport './FavoritesPage.css';\nimport users from '../../reducers/users';\n\nclass FavoritesPage extends Component {\n\n    state = {\n        pictures: pictures,\n        isFavorite: true,\n        userFavorites: []\n\n    }\n    handleClick = (e, favImg) => {\n        console.log(e.target.id);\n        console.log(e.target.className);\n        console.log(favImg);\n        this.props.removeFavorite(e.target.className);//passing name as a parameter\n    }    \n\n    render() {\n        console.log('inside favorites page');\n        console.log(this.props.userFavorites);\n        console.log(this.props);\n        return(\n          <div className='favoritesPage'>\n            <div className='mainContent'> \n            <h3> Favorites Page ! Here are your most favorite pictures</h3>\n            {this.props.userFavorites.map(({id, name, source}) => \n            <div onClick={this.imgDetails}><img id={id} key={id} src={source} alt={name} />\n            <button className={name} id='removeBtn' onClick={(event) => this.handleClick(event, this.props.userFavorites)}>Remove</button>\n            </div>)}\n            </div> \n          </div>\n        )\n    }\n\n\n}\nconst mapStateToProps = (state) => ({\n    pictures: state.pictures.pictures,\n    isFavorite: state.pictures.isFavorite,\n    userFavorites: state.pictures.userFavorites\n})\nconst mapDispatchToProps = (dispatch) => ({\n    removeFavorite : data => dispatch(removeFavorite(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":13,"column":5,"nodeType":"131","messageId":"132","endLine":13,"endColumn":10},{"ruleId":"129","severity":1,"message":"133","line":14,"column":5,"nodeType":"131","messageId":"132","endLine":14,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":15},{"ruleId":"124","severity":1,"message":"134","line":38,"column":15,"nodeType":"126","messageId":"127","endLine":38,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":18,"column":51,"nodeType":"137","endLine":18,"endColumn":56},{"ruleId":"124","severity":1,"message":"138","line":4,"column":16,"nodeType":"126","messageId":"127","endLine":4,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":27,"column":21,"nodeType":"141","endLine":27,"endColumn":33},{"ruleId":"139","severity":1,"message":"140","line":33,"column":21,"nodeType":"141","endLine":33,"endColumn":33},{"ruleId":"124","severity":1,"message":"142","line":37,"column":17,"nodeType":"126","messageId":"127","endLine":37,"endColumn":33},{"ruleId":"124","severity":1,"message":"143","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":13},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","no-dupe-keys","Duplicate key 'users'.","ObjectExpression","unexpected","Duplicate key 'pictures'.","'thisUser' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'newNumberOfLikes' is assigned a value but never used.","'users' is defined but never used.","no-global-assign","no-unsafe-negation"]