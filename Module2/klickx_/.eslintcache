[{"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/index.js":"1","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reportWebVitals.js":"2","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/App/App.js":"3","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/RegisterPage/RegisterPage.jsx":"4","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/HomePage/HomePage.js":"5","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/index.js":"6","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/pictureData.js":"7","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/users.js":"8","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/LoginLogoutAction.js":"9","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/helpers/history.js":"10","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/LoginPage/LoginPage.js":"11","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Header/Header.js":"12","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/SideNavBar/SideNavBar.js":"13","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/ProfilePage/ProfilePage.js":"14","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Footer/Footer.js":"15","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/UserHomePage/UserHomePage.js":"16","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/registrationReducers.js":"17","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/RegisterUserAction.js":"18","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/ImagesComponent/Images.js":"19","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/imageActionsReducers.js":"20","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/ImageActions.js":"21","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/FavoritesPage/FavoritesPage.js":"22","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/klickx_reducers.js":"23","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/RoutesPage/Routes.js":"24"},{"size":883,"mtime":1612058524664,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611620991931,"results":"27","hashOfConfig":"26"},{"size":569,"mtime":1612547017138,"results":"28","hashOfConfig":"26"},{"size":2512,"mtime":1612625491963,"results":"29","hashOfConfig":"26"},{"size":1321,"mtime":1612293855801,"results":"30","hashOfConfig":"26"},{"size":476,"mtime":1612608663624,"results":"31","hashOfConfig":"26"},{"size":3861,"mtime":1612275753294,"results":"32","hashOfConfig":"26"},{"size":2707,"mtime":1611941084972,"results":"33","hashOfConfig":"26"},{"size":331,"mtime":1612485720016,"results":"34","hashOfConfig":"26"},{"size":85,"mtime":1612035930978,"results":"35","hashOfConfig":"26"},{"size":4859,"mtime":1612741730412,"results":"36","hashOfConfig":"26"},{"size":468,"mtime":1612634339482,"results":"37","hashOfConfig":"26"},{"size":2076,"mtime":1612610642618,"results":"38","hashOfConfig":"26"},{"size":3050,"mtime":1612711871510,"results":"39","hashOfConfig":"26"},{"size":426,"mtime":1612290074043,"results":"40","hashOfConfig":"26"},{"size":1763,"mtime":1612827989895,"results":"41","hashOfConfig":"26"},{"size":1179,"mtime":1612558488478,"results":"42","hashOfConfig":"26"},{"size":128,"mtime":1612198669840,"results":"43","hashOfConfig":"26"},{"size":7056,"mtime":1612820699818,"results":"44","hashOfConfig":"26"},{"size":6630,"mtime":1612827587458,"results":"45","hashOfConfig":"26"},{"size":1447,"mtime":1612728499186,"results":"46","hashOfConfig":"26"},{"size":1711,"mtime":1612627986921,"results":"47","hashOfConfig":"26"},{"size":2204,"mtime":1612607398294,"results":"48","hashOfConfig":"26"},{"size":1227,"mtime":1612546907900,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1snfh7b",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/index.js",[],["103","104"],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reportWebVitals.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/App/App.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/RegisterPage/RegisterPage.jsx",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/HomePage/HomePage.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/index.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/pictureData.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/users.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/LoginLogoutAction.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/helpers/history.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/LoginPage/LoginPage.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Header/Header.js",["105"],"import React from 'react';\nimport './Header.css';\nimport { withRouter } from 'react-router-dom';\n\nconst Header = (props) => { //why props? learn this\n    // console.log('Rendering Header - Check the props and learn');\n    // console.log(props); // check here\n    return (\n           <header className='mainHeader'>   \n               <h1> K L I C K X_</h1>\n               <img src='camera icon.png'/>   \n           </header> \n    )\n}\nexport default withRouter(Header);\n","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/SideNavBar/SideNavBar.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/ProfilePage/ProfilePage.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/Footer/Footer.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/UserHomePage/UserHomePage.js",["106"],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/registrationReducers.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/RegisterUserAction.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/components/ImagesComponent/Images.js",["107"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addComment, likeImage, unlikeImage, addToFavorites, deleteComment, togglePopUp, wantToAddComment, makeProfilePicture } from '../../actions/ImageActions';\nimport './Images.css';\n\nimport pictures from '../../reducers/pictureData';\nimport users from '../../reducers/users';\n\n\n\nclass Images extends Component { \n    \n    // state = {\n    //     pictures: pictures,\n    //     userLiked: false,\n    //     Comments: [],\n    //     userFavorite: [],\n    //     isClicked: false,\n    //     isOpen: '',\n    //     selectedImage: {\n    //         liked: false,\n    //         commentPosted: false,\n    //         wantToAddComment: false,\n    //         comment: ''\n\n    //     }\n    // }\n    handleClick = (e) => {\n        console.log('onclick- handle Click function');\n        console.log(e.target.id);\n        if(e.target.id === 'fav'){\n            //call actions of fav \n            this.props.addToMyFavorites(this.props.selectedImage)\n            alert('Added to your favorites!!!')\n        }\n        if(e.target.id === 'like'){\n            console.log(users.length);\n            let totalNumberOfUsers = users.length + 1 // existing users plus the new registered user\n            console.log(this.props.likes);\n            // let newNumberOfLikes = Number(this.props.likes)+1;\n            if(this.props.selectedImage.likes < totalNumberOfUsers) {\n                this.props.likeThisImage(this.props.selectedImage);\n                \n            }\n            else {\n                alert('Already Liked the image!!');\n            }\n        }\n        if(e.target.id === 'unlike') {\n            this.props.unlikeThisImage(this.props.selectedImage);\n\n        }\n        if(e.target.id === 'btnPost'){\n            console.log(e.target.id);\n            this.props.wantToAddNewComment(true);\n        }\n        if(e.target.id === 'btnDelete'){\n            console.log(e.target.id);\n            //this.props.wantToAddNewComment(false);\n            this.props.deleteThisComment(this.props.selectedImage.comments);\n        }\n        if(e.target.id === 'PP'){\n            this.props.makeThisProfilePicture(this.props.selectedImage);\n        }\n    }\n    handleChange = (e) =>{\n        //to bind the text which we entered and to store in that corresponding ids  \n        this.setState({ [e.target.id]: e.target.value })\n    }\n    handleSubmit = (e ) => {\n        e.preventDefault();\n        e.stopPropagation();\n        console.log('handleSubmit');\n        var newDate = new Date()\n        console.log(newDate);\n        let newComment = document.getElementById('textPostComment').value;\n        console.log(newComment);\n        let newCommentObject = { \n            comment: newComment,\n            //by: localStorage.getItem('name')\n            by: this.props.newUser.name\n         }\n         console.log(newCommentObject);\n        this.props.addNewComment(newCommentObject);\n\n    }\n    handleClose = (e) =>{\n        console.log('clicking the close button');\n        this.props.togglePopUpModal(false);\n    }\n\n    render(){\n        console.log('Rendering Images ',this.props.selectedImage);\n        return (\n            // <div className='container'>\n            <div className='popup-box'>\n                <div className='box'>\n                <div className='imageContainer'>\n                <span className=\"close-icon\" onClick={this.handleClose}>x</span>\n                <img id={this.props.selectedImage.id} src={this.props.selectedImage.source} alt={this.props.selectedImage.name} />\n                </div>\n                <div className='btnContainer' >\n                    <button id='fav' onClick={this.handleClick}>Add To Favorites </button>\n                    <button id='PP' onClick={this.handleClick}>Profile Picture</button>\n                    <button id='totalLikes'>Total Likes </button>\n                    <button id='totalLikesValue'> {this.props.selectedImage.likes} </button>\n                    {/* <button id='like' onClick={this.handleClick}>{this.props.selectedImage.liked ? 'Unlike' : 'Like'}</button >  */}\n                    {this.props.selectedImage.liked ? <button id='unlike' onClick={this.handleClick}>Unlike</button> : <button id='like' onClick={this.handleClick}>Like</button> }\n                    { this.props.selectedImage.liked  ? <img id='likedIcon' src='/likedIcon.png' alt='likedImage'/> : ''}                   \n                </div>\n                <div className='commentsContainer' >\n                    <div className='commentsList'>\n                        <label> Comments </label>\n                    <ul className='noBulletList'>\n                        {this.props.comments.map((comment, index)=> {\n                            return(\n                              <div> <li key={index}> {comment.comment}</li><br /> </div>\n                        )} \n                        )}\n                    </ul>\n                    </div>\n                    <div className='postingComment'> \n                    {!this.props.commentPosted ? <button id='btnPost' onClick={this.handleClick}>Post Comment</button> \n                    : <button id='btnDelete' onClick={this.handleClick}>Delete Comment</button> }\n                    {/* <button id='btnDelete' onClick={this.handleClick}>Delete Comment</button>  */}\n                    {this.props.wantToAddComment && !this.props.commentPosted && !this.props.commentDeleted? \n                    <form>\n                    <br />\n                    <input type='textarea' id='textPostComment' onChange={this.handleChange}/>\n                    {/* <br /> */}\n                    <input type='button' value='Submit' id='submit' onClick={this.handleSubmit} />\n                     </form>   \n                     : ''}\n                    </div>\n                </div>\n                </div>\n           </div>\n        \n        )\n}\n}\nconst mapStateToProps = (state) => ({\n\n    pictures: state.pictures.pictures,\n    selectedImage : state.pictures.selectedImage,\n    isOpen : state.pictures.isOpen,\n    likes : state.pictures.selectedImage.likes,\n    commentPosted: state.pictures.selectedImage.commentPosted,\n    wantToAddComment: state.pictures.selectedImage.wantToAddComment,\n    comments: state.pictures.selectedImage.comments,\n    Comments: state.pictures.Comments,\n    newUser: state.users1.newUser,\n    commentDeleted: state.pictures.selectedImage.commentDeleted\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n    likeThisImage : data => dispatch(likeImage(data)),\n    addNewComment : data => dispatch(addComment(data)),\n    deleteThisComment : data => dispatch(deleteComment(data)),\n    addToMyFavorites : data => dispatch(addToFavorites(data)),\n    togglePopUpModal : data => dispatch(togglePopUp(data)),\n    wantToAddNewComment : data => dispatch(wantToAddComment(data)),\n    makeThisProfilePicture : data => dispatch(makeProfilePicture(data)),\n    unlikeThisImage: data => dispatch(unlikeImage(data))\n    \n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Images);","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/imageActionsReducers.js",["108","109"],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/actions/ImageActions.js",[],"/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/FavoritesPage/FavoritesPage.js",["110","111"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeFavorite } from '../../actions/ImageActions';\nimport pictures from '../../reducers/pictureData';\nimport './FavoritesPage.css';\nimport users from '../../reducers/users';\n\nclass FavoritesPage extends Component {\n\n    // state = {\n    //     pictures: pictures,\n    //     isFavorite: true,\n    //     userFavorites: []\n\n    // }\n    handleClick = (e, favImg) => {\n        console.log(e.target.id);\n        console.log(e.target.className);\n        console.log(favImg);\n        this.props.removeThisFavorite(e.target.className);//passing name as a parameter\n    }    \n\n    render() {\n        console.log('inside favorites page');\n        console.log(this.props.userFavorites);\n        console.log(this.props);\n        return(\n          <div className='favoritesPage'> \n            <h3> Favorites Page ! Here are your most favorite pictures</h3>\n            <div className='mainContent'>\n            {this.props.userFavorites.map(({id, name, source}) => \n            <div key={id} onClick={this.imgDetails}><img id={id}  src={source} alt={name} />\n            <button className={name} id='removeBtn' onClick={(event) => this.handleClick(event, this.props.userFavorites)}>Remove</button>\n            </div>)}\n            </div> \n          </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    pictures: state.pictures.pictures,\n    isFavorite: state.pictures.isFavorite,\n    userFavorites: state.pictures.userFavorites\n})\nconst mapDispatchToProps = (dispatch) => ({\n    removeThisFavorite : data => dispatch(removeFavorite(data))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/reducers/klickx_reducers.js",["112"],"// store the initial state, and describe how the actions change the state\n// import your action here\nimport { LOGIN_USER, LOGOUT_USER } from '../actions/LoginLogoutAction';\nimport { REGISTER_USER } from '../actions/RegisterUserAction';\nimport users from './users.js';\nimport pictures from './pictureData.js';\nconsole.log(users);\n\nexport const initialState = {\n    users : users,\n    //pictures: pictures, checking\n    newUser: {\n        name: '',\n        email: '',\n        password: '',\n        isLoggedIn: false,\n        favorites: [],\n        pictures: [],\n        profilePictures: '',\n        isRegistered: false\n    }\n    \n}\n\nconst klickx_reducers = (state = initialState, action) => {\n    switch(action.type) {   \n            case LOGIN_USER :\n                console.log('inside login user');\n                console.log(action.payload);\n                // localStorage.setItem(\"name\", JSON.stringify(action.payload.name));\n                // localStorage.setItem(\"isLoggedIn\", JSON.stringify(action.payload.isLoggedIn));\n                return {\n                        ...state,       \n                        newUser: {\n                            ...state.newUser,\n                            email: action.payload.email,\n                            isLoggedIn: true\n                        }        \n                    }   \n            \n            case LOGOUT_USER :\n                console.log('logging out');\n                localStorage.clear();\n                return initialState    \n            \n            case REGISTER_USER :\n                console.log('Registering the User');\n                localStorage.setItem(\"name\", JSON.stringify(action.payload.name));  \n                return {\n                    ...state,\n                    newUser: {\n                        ...state.newUser,\n                        name: action.payload.name,\n                        email: action.payload.email,\n                        password: action.payload.password,\n                        isRegistered: true   \n                        }                                \n                }        \n            default: \n                return state    \n\n    }\n}\nexport default klickx_reducers; ","/Users/student/Desktop/PerScholasWorks/Module2/klickx_/src/pages/RoutesPage/Routes.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":11,"column":16,"nodeType":"119","endLine":11,"endColumn":44},{"ruleId":"120","severity":1,"message":"121","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":126,"column":77,"nodeType":"126","messageId":"127","endLine":126,"endColumn":79},{"ruleId":"124","severity":1,"message":"128","line":148,"column":31,"nodeType":"126","messageId":"127","endLine":148,"endColumn":33},{"ruleId":"120","severity":1,"message":"121","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":16},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'pictures' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'users' is defined but never used.","no-global-assign","no-unsafe-negation"]